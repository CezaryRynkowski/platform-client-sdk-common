import {{moduleName}} = require('{{projectName}}');
import Configuration from './src/purecloud-platform-client-v2/configuration';

declare module '{{projectName}}' {
	export const ApiClient: ApiClientClass;
}

declare class ApiClientClass {
	instance: ApiClientClass;
	proxy: ProxyConfig;
	superagent: any;
	config: Configuration;

	callApi(path: string, httpMethod: string, pathParams: { [key: string]: string; }, queryParams: { [key: string]: object; }, headerParams: { [key: string]: object; }, formParams: { [key: string]: object; }, bodyParam: any, authNames: Array<string>, contentTypes: Array<string>, accepts: Array<string>): Promise<any>;
	loginClientCredentialsGrant(clientId: string, clientSecret: string): Promise<AuthData>;
	loginImplicitGrant(clientId: string, redirectUri: string, opts?: LoginImplicitGrantOptions): Promise<AuthData>;
	logout(logoutRedirectUri: string): void;
	setAccessToken(token: string): void;
	setEnvironment(environment: string): void;
	setPersistSettings(doPersist: boolean, prefix?: string): void;
	setReturnExtendedResponses(returnExtended: boolean): void;
	setStorageKey(storageKey: string): void;
}

declare class LoginImplicitGrantOptions {
	state?: string;
}

declare class AuthData {
	accessToken: string;
	state?: string;
	tokenExpiryTime: number;
	tokenExpiryTimeString: string;
}

declare class ProxyConfig {
	host: string;
	port: number;
	protocol: string;
}
{{#apiInfo}}
{{#apis}}{{#operations}}
declare class {{classname}} { {{#operation}} {{!-- class: CodegenOperation --}}
  	{{operationId}}({{#allParams}}{{#required}}{{{paramName}}}: {{{typeScriptType}}}{{#vendorExtensions.x-codegen-hasMoreRequired}}, {{/vendorExtensions.x-codegen-hasMoreRequired}}{{/required}}{{/allParams}}{{#hasOptionalParams}}{{#vendorExtensions.x-codegen-hasRequiredParams}}, {{/vendorExtensions.x-codegen-hasRequiredParams}}opts?: {{classname}}.{{operationId}}Options{{/hasOptionalParams}}): Promise<{{{typeScriptResponseType}}}>;{{/operation}}
}

declare namespace {{classname}} { {{#operation}}{{#hasOptionalParams}}
	export interface {{operationId}}Options { {{#allParams}}{{^required}}
		"{{{paramName}}}"?: {{{typeScriptType}}};{{/required}}{{/allParams}}
	}{{/hasOptionalParams}}{{/operation}}
}
{{/operations}}
{{/apis}}

declare namespace Models { {{#models}}{{#model}}
	export interface {{classname}} { {{#vars}}
		"{{baseName}}"{{^required}}?{{/required}}: {{{typeScriptType}}};{{/vars}}
	}
	{{/model}}{{/models}}
}
{{/apiInfo}}
